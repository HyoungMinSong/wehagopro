<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dozone.wehagopro.repository.mybatis.OrganizationMapper">

    <select id="selectEmployeeList" resultType="OrganizationUserEmplDto">
        SELECT t_user.*, t_employee.*, t_organization.t_organization_name
        FROM t_user
        JOIN t_employee ON t_user.t_user_no = t_employee.t_user_no
        JOIN t_organization ON t_employee.t_organization_no = t_organization.t_organization_no
        WHERE t_user.t_user_no IN (
        SELECT t_user_no
        FROM t_employee
        WHERE t_company_no = (
        SELECT t_company_no
        FROM t_company
        WHERE t_company_no = #{t_company_no}
        )
        AND t_employee_state >= 0
        )
        AND t_employee.t_company_no = #{t_company_no}
        AND t_user.t_user_state != 0 order by t_user.t_user_name;
    </select>
    <select id="selectOrganizationList" resultType="OrganizationDto">
        SELECT ROW_NUMBER() OVER(ORDER BY t_organization_no) AS RowNum, *
        FROM t_organization
        WHERE t_organization_parent = #{t_company_no}
        ORDER BY t_organization_no;
    </select>
    <insert id="insertOrganization">
        INSERT INTO t_organization (t_organization_name, t_organization_parent)
        VALUES (#{t_organization_name}, #{t_organization_parent});
    </insert>
    <update id="updateOrganization">
        UPDATE t_organization SET t_organization_name = #{t_organization_name} WHERE t_organization_no = #{t_organization_no};
    </update>
    <delete id="deleteOrganization">
        DELETE FROM t_organization WHERE t_organization_no = #{t_organization_no};
    </delete>
    <select id="insertUser">
        INSERT INTO t_user
        (t_user_name, t_user_phone, t_user_email, t_user_photo_path, t_user_state)
        VALUES
        (#{t_user_name}, #{t_user_phone}, #{t_user_email}, #{t_user_photo_path}, 1)
        RETURNING t_user_no;
    </select>
    <select id="selectOrganizationNo">
        SELECT t_organization_no
        FROM t_organization
        WHERE t_organization_name = #{t_organization_name}
        AND t_organization_parent = -1;
    </select>
    <select id="insertEmployee">
        INSERT INTO t_employee
        (t_user_no, t_company_no, t_employee_auth, t_employee_duty, t_employee_position, t_employee_date, t_organization_no)
        VALUES
        (#{t_user_no}, #{t_company_no}, #{t_employee_auth}, #{t_employee_duty}, #{t_employee_position}, #{t_employee_date}, #{t_organization_no})
        RETURNING t_employee_no;
    </select>
    <insert id="insertShortlink">
        INSERT INTO t_shortlink
        (t_employee_no, t_shortlink_link)
        VALUES
        (#{t_employee_no}, #{t_shortlink_link});
    </insert>
    <select id="selectCompanyName">
        SELECT t_company_name
        FROM t_company
        WHERE t_company_no=#{t_company_no};
    </select>
    <update id="updateReceivedMailEmployee">
        UPDATE t_employee
        SET t_employee_state = 1
        WHERE t_employee_no=#{t_employee_no};
    </update>
    <update id="updateReceivedMailShortlink">
        UPDATE t_shortlink
        SET t_shortlink_deadline = CURRENT_DATE + interval '1 day'
        WHERE t_employee_no = #{t_employee_no};
    </update>
    <update id="updateDetailUser">
        UPDATE t_user
        SET t_user_photo_path = #{t_user_photo_path}
        WHERE t_user_no = #{t_user_no}
        AND t_user_state != 0;
    </update>
    <update id="updateDetailEmployee">
        UPDATE t_employee
        SET t_organization_no = #{t_organization_no},
            t_employee_duty = #{t_employee_duty},
            t_employee_position = #{t_employee_position},
            t_employee_date = #{t_employee_date},
            t_employee_auth = #{t_employee_auth},
            t_employee_update_date = CURRENT_DATE
        WHERE t_employee_no = #{t_employee_no};
    </update>
    <update id="updateEmployeeState">
        UPDATE t_employee
        SET
        t_employee_state = #{t_employee_state},
        t_employee_delete_date =
        <choose>
            <when test="t_employee_state == -1">
                CURRENT_DATE
            </when>
            <otherwise>
                t_employee_delete_date
            </otherwise>
        </choose>,
        t_employee_update_date =
        <choose>
            <when test="t_employee_state != -1">
                CURRENT_DATE
            </when>
            <otherwise>
                t_employee_update_date
            </otherwise>
        </choose>
        WHERE t_employee_no = #{t_employee_no};
    </update>
    <update id="updateFiredPublish">
        UPDATE t_service_published
        SET t_service_recall = 0, t_service_recall_date = CURRENT_DATE
        WHERE t_employee_no = #{t_employee_no};
    </update>
</mapper>